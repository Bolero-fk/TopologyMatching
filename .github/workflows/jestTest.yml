name: Jest Test with Coverage Report

on:
  push:
    paths:
    - 'Scripts/**'
    branches: [ "main" ]
  pull_request:
    paths:
    - 'Scripts/**'
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: '18' 

    - name: Install dependencies
      working-directory: ./Scripts
      run: npm install

    - name: Test with Jest
      working-directory: ./Scripts
      run: npm test -- --coverage

    - name: Upload coverage report as artifact
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: ./Scripts/coverage/


    - name: Code Coverage Report
      uses: insightsengineering/coverage-action@v2
      with:
        # Path to the Cobertura XML report.
        path: ./Scripts/coverage/cobertura-coverage.xml # Jestが生成するカバレッジレポートのパス
        # Minimum total coverage, if you want to the
        # workflow to enforce it as a standard.
        # This has no effect if the `fail` arg is set to `false`.
        threshold: 80
        # Fail the workflow if the minimum code coverage
        # reuqirements are not satisfied.
        fail: true
        # Publish the rendered output as a PR comment
        publish: true
        # Create a coverage diff report.
        diff: true
        # Branch to diff against.
        # Compare the current coverage to the coverage
        # determined on this branch.
        diff-branch: main
        # This is where the coverage reports for the
        # `diff-branch` are stored.
        # Branch is created if it doesn't already exist'.
        diff-storage: jest-_xml_coverage_reports


